{"version":3,"sources":["api/api.js","components/PostsList/PostsList.jsx","api/posts.js","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","options","fetch","then","response","json","result","data","PostsList","userId","showPost","selectedPostId","showPostDetails","useState","userPosts","setUserPosts","useEffect","posts","getUserPosts","className","map","userPost","key","id","title","type","onClick","NewCommentForm","postId","addComment","name","setName","email","setEmail","body","setBody","onSubmit","e","preventDefault","placeholder","value","onChange","target","required","delCommentFromServer","commentId","method","PostDetails","postDetails","setPostDetails","postComments","setPostComments","showComments","setShowComments","getPostDetails","postDetailsFromServer","getComments","postCommentsFromServer","length","comment","Math","random","current","filter","newComment","headers","JSON","stringify","App","selectedUserId","setselectedUserId","setSelectedPostId","setShowPostDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ea40712.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then(response => response.json())\n  .then(result => result.data);\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport { getUserPosts, getAllPosts } from '../../api/posts';\n\nexport const PostsList = ({\n  userId,\n  showPost,\n  selectedPostId,\n  showPostDetails,\n}) => {\n  const [userPosts, setUserPosts] = useState([]);\n\n  useEffect(() => {\n    if (userId === 0) {\n      getAllPosts()\n        .then((posts) => {\n          setUserPosts(posts);\n        });\n    } else {\n      getUserPosts(userId)\n        .then((posts) => {\n          setUserPosts(posts);\n        });\n    }\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {userPosts.map(userPost => (\n          <li key={userPost.id} className=\"PostsList__item\">\n            <div>\n              <b>\n                [User #\n                {userPost.userId}\n                ]:\n                {' '}\n              </b>\n              {userPost.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                showPost(userPost.id);\n              }}\n            >\n              {selectedPostId === userPost.id && showPostDetails\n                ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  showPost: PropTypes.bool.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  showPostDetails: PropTypes.bool.isRequired,\n};\n","import { request } from './api';\n\nexport const getUserPosts = userId => request(`/posts?userId=${userId}`);\n\nexport const getAllPosts = () => request(`/posts`);\n\nexport const getPostDetails = postId => request(`/posts/${postId}`);\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newComment = {\n      name,\n      email,\n      body,\n      postId,\n    };\n\n    addComment(newComment);\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={(e) => {\n            setBody(e.target.value);\n          }}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import { request, BASE_URL } from './api';\n\nexport const getComments = postId => request(`/comments?postId=${postId}`);\n\nconst remove = url => request(url, { method: 'DELETE' });\n\nexport const delCommentFromServer\n  = commentId => remove(`/comments/${commentId}`);\n\nexport function pushCommentToServer(comment) {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport {\n  getComments,\n  delCommentFromServer,\n  pushCommentToServer,\n} from '../../api/comments';\n\nexport const PostDetails = ({ postId }) => {\n  const [postDetails, setPostDetails] = useState({});\n  const [postComments, setPostComments] = useState([]);\n  const [showComments, setShowComments] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then((postDetailsFromServer) => {\n        setPostDetails(postDetailsFromServer);\n      });\n\n    getComments(postId)\n      .then((postCommentsFromServer) => {\n        setPostComments(postCommentsFromServer);\n      });\n  }, [postId]);\n\n  const deleteComment = (commentId) => {\n    setPostComments(current => current\n      .filter(comment => comment.id !== commentId));\n    delCommentFromServer(commentId);\n  };\n\n  const addComment = (newComment) => {\n    setPostComments(current => [...current, newComment]);\n    pushCommentToServer(newComment);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setShowComments(!showComments);\n          }}\n        >\n          {showComments\n            ? `Hide ${postComments.length} comments`\n            : `Show ${postComments.length} comments`}\n        </button>\n        {showComments ? (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id || Math.random()}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(comment.id);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <ul className=\"PostDetails__list\" />\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedUserId, setselectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [showPostDetails, setShowPostDetails] = useState(false);\n\n  const handleUserSelection = (e) => {\n    setselectedUserId(+e.target.value);\n    setShowPostDetails(false);\n  };\n\n  const handlePostSelection = (postId) => {\n    if (!postId) {\n      setShowPostDetails(false);\n    } else if (selectedPostId === postId && showPostDetails) {\n      setShowPostDetails(false);\n    } else {\n      setSelectedPostId(postId);\n      setShowPostDetails(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            name=\"selectedUserId\"\n            value={selectedUserId}\n            onChange={handleUserSelection}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={selectedUserId}\n            showPost={handlePostSelection}\n            selectedPostId={selectedPostId}\n            showPostDetails={showPostDetails}\n          />\n        </div>\n        <div className=\"App__content\">\n          {showPostDetails && (\n            <PostDetails postId={selectedPostId} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}